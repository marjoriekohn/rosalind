import unittest
from subs import motif_dna


class TestMotifDNA(unittest.TestCase):

    def test_sample_dataset(self):
        self.assertEqual(motif_dna("GATATATGCATATACTT", "ATAT"), "2 4 10")  # sample dataset and output

    def test_substring_longer_than_string(self):
        self.assertEqual(motif_dna("AGC", "AGCT"), "ERROR: dna_substring is longer than dna_string")  # long substring

    def test_no_match(self):
        self.assertEqual(motif_dna("GATATATGCATATACTT", "GCGC"), "")  # no match

    def test_empty_substring(self):
        self.assertEqual(motif_dna("AGCT", ""), "ERROR: dna_substring is longer than dna_string")  # empty string

    def test_dataset(self):
        self.assertEqual(motif_dna(
            "CGGGCTGCTCGGGCTGCCAGCGGGCTGATACGGGCTGCGGGCTGCGGGCTGACGTCGGGCTGTTTCGGGCTGCGGGCTGGTACGGGCTGCGGGCTGACGGGCTGTACGGCCTCGGGCTGCGTTTTCGGGCTGAAGTTCGGGCTGTGGCCCGGGCTGACGGGCTGTCCACGGGCTGTCGGGCTGCGGGCTGCGGGCTGAGAGTATGTTCGGGCTGCTCCAACCGGGCTGACCCGGGCTGAAGCGGGCTGCCCGGGCTGAATCTGCCGTGCGGGCTGAGCCCTTCCGGGCTGCGGGCTGTGGCGTATCTTCATCCGGGCTGTCCGGGCTGCGGGCTGTGCGGGCTGCAAGCGGGCTGGAACTCCGGGCTGCGGGCTGGCGGGCTGACTTTTCCCGGGCTGTGACGGGCTGACGGGCTGCGGGCTGGCTTCGGGCTGATCGGGCTGCTCCCCCCGCGGGCTGGCCGGGCTGCGGGCTGCAGAGTCCGGGCTGAATCCCGCGGGCTGGTGCAAAGACAGGGTGACAACGGGCTGGTCGGGCTGCGGGCTGCTTTAATGTCTGTGCGGGCTGCCGGGCTGTGTACGGGCTGTGCCGGGCTGGGCGGGCTGCGCCGGGCTGTGCGTGGACGGGCTGGCCGTACGGGCTGGGCGCGGGCTGCGGGCTGACCGGGCTGCATTCCGGGCTGCGGGCTGACGGGCTGCAACAACGGGCTGTTGCCGGGCTGACGCGCGGGCTGTGACGGGCTGCCCCGGGCTGTGACGGGCTGCTCAGCAAATTCTAAGAGCTCGGGCTGCGGGCTGCCCGGGCTGAAAAATCGGGCTGATTGCGGGCTGGGCGGGCTG",
            "CGGGCTGCG"
        ), "31 38 66 83 113 177 184 284 322 362 410 462 533 599 648 676 784")


if __name__ == '__main__':
    unittest.main()
